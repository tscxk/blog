[
  {
    "objectID": "502a5a5e4979112e1e864b1183ff6fc8dff3a14b",
    "permalink": "/post/interview/jvm/",
    "title": "Jvm面试题","content": "\rJVM面试题\r综合\r1. 说说JVM的主要组成部分和流程\rJVM主要包含两个子系统和两个组件，两个子系统分别是Class loader(类装载)、Execution engine(执行引擎)；两个组件分别是Runtime data area(运行时数据区)、Native Interface(本地接口)。\nClass loader(类装载)：根据类的全限定名来装载class到运行时数据区域的方法区中 Runtime data area(运行时数据区)：即我们常说的JVM的内存 Execution engine(执行引擎)：负责将字节码文件“翻译”成对应平台上的机器指令并执行 Native Interface(本地接口)：和其它编程语言交互的接口 流程：编译器首先将Java代码转换成字节码。类加载器负责将字节码加载到运行时数据区域的方法区中。由于字节码是跨平台语言，因此需要解释器引擎根据平台翻译成具体的机器指令再交由cpu执行。本地库接口则是方面java代码进行系统调用或者其他函数的调用。\n2. 讲讲JVM内存模型\r程序计数器（线程私有）：\n存放当前线程的下一条指令地址。通过改变它来实现程序的流转控制，如循环、跳转、线程恢复等\n虚拟机栈（线程私有）：\n主要存放栈帧；每个方法被执行时，都会同步创建一个栈帧，用于存储局部变量表、操作数栈、动态链接、方法出口等信息。方法从调用到执行完成，对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。\n本地方法栈（线程私有）：\n和虚拟机栈功能类似。不同的是它是为Native方法服务的。\n堆（共享）：\n几乎所有的对象实例和数组都在这里分配内存，这里是GC的主要区域，也被称为GC堆\n方法区（共享）：\n存储内容包括已被加载的类的元数据信息（如类名、方法信息、字段信息）、类静态变量、运行时常量池和即时编译器编译后的代码缓存等\n[!important]\n部分名词概念：\n局部变量表：包括基本数据类型和对象引用，其中基本数据类型是没有实例的概念的，这部分数据都在这里面\n操作数栈：存储计算过程的中间结果和临时操作数\n动态链接：栈帧内部的一个指针，指向运行时常量池（Runtime Constant Pool） 中该栈帧所属方法的引用。主要作用是将符号引用转为直接引用。其中**“动态”**的含义在于有些方法的直接引用需要到运行时才能确定。\n方法出口：存放着调用该 …","date": "2025-08-22 10:08:31",
    "updated": "2025-08-23 15:21:22"
  }, 
  {
    "objectID": "44c057bc80b2bbf34b6b410a9e99ebc0e55c3e61",
    "permalink": "/post/mysql/index_fail/",
    "title": "索引失效场景","content": "\r前言\r把啦啦啦\n一、测试表设计\rCREATE TABLE `user` ( `id` INT PRIMARY KEY AUTO_INCREMENT COMMENT \u0026#39;主键\u0026#39;, `user_id` VARCHAR(20) NOT NULL COMMENT \u0026#39;用户ID（字符串类型）\u0026#39;, `username` VARCHAR(50) NOT NULL COMMENT \u0026#39;用户名\u0026#39;, `age` TINYINT NOT NULL COMMENT \u0026#39;年龄\u0026#39;, `city` VARCHAR(20) NOT NULL COMMENT \u0026#39;城市\u0026#39;, `salary` INT NOT NULL COMMENT \u0026#39;薪资\u0026#39;, `phone` CHAR(11) COMMENT \u0026#39;手机号\u0026#39;, `status` TINYINT NOT NULL DEFAULT 0 COMMENT \u0026#39;状态\u0026#39;, `score` INT NOT NULL DEFAULT 0 COMMENT \u0026#39;分数\u0026#39;, `create_time` DATETIME NOT NULL COMMENT \u0026#39;创建时间\u0026#39;, `update_time` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 索引配置 UNIQUE KEY `uniq_user_id` (`user_id`), KEY `idx_username_age_city` (`username`,`age`,`city`), KEY `idx_create_time` (`create_time`), KEY `idx_score` (`score`), KEY `idx_phone` (`phone`), KEY `idx_status` (`status`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; 二、失效场景\r场景1： 索引列参与计算\r-- ❌ 错误写法：对索引列使用函数 SELECT * FROM user WHERE YEAR(create_time) = 2025; -- ✅ 优化方案：保持索引列原始值 SELECT * FROM user WHERE create_time BETWEEN \u0026#39;2025-01-01\u0026#39; AND \u0026#39;2025-12-31\u0026#39;; ","date": "2025-08-21 20:25:47",
    "updated": "2025-08-21 20:39:10"
  }, 
  {
    "objectID": "ceb80812863e8da5a15c9726e238ed12e52de6da",
    "permalink": "/post/study/java/spring/source_code/test/",
    "title": "Test","content": "This is a Chinese test post.\n善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。\n以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？\n就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。\n國新故。\n工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？\nFrom 亂數假文產生器 - Chinese Lorem Ipsum\n","date": "2025-08-21 10:12:19",
    "updated": "2025-08-22 10:10:20"
  }, 
  {
    "objectID": "504adca92ad95fbf4c471bdb6cbcb300a8685a40",
    "permalink": "/post/main/",
    "title": "Markdown Basic Elements","content": "\rMarkdown 基本元素\r标题\rH1\rH2\rH3\rH4\rH5\rH6\r强调\rEmphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\n列表\rDefinition List (dl)\rOrdered List (ol)\rList Item 1 List Item 2 List Item 3 Unordered List (ul)\rList Item 1 List Item 2 List Item 3 段落\rLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam …","date": "2022-06-09 20:12:52",
    "updated": "2022-06-09 20:12:52"
  }, 
  {
    "objectID": "daeb6251321373d6006136db1dfff66c0d518fbd",
    "permalink": "/post/first/",
    "title": "模板创建来源","content": "This is a Chinese test post.\n文章模板转载来源： Github\rhttps://github.com/D-Sketon/hugo-theme-reimu\r部署参考： 部署参考\rhttps://linux.do/t/topic/878595\r","date": "2022-06-09 20:12:52",
    "updated": "2025-08-22 08:55:38"
  }]